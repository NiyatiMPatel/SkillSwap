services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: skillswap-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-skillswap}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - skillswap-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    container_name: skillswap-server
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-5000}:5000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DB_NAME:-skillswap}?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your_super_secret_key_change_in_production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      CLIENT_URL: ${CLIENT_URL:-http://localhost:3000}
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - skillswap-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    container_name: skillswap-client
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT:-3000}:${CLIENT_EXPOSE_PORT:-5173}"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      VITE_API_URL: ${VITE_API_URL:-http://localhost:5000/api}
    depends_on:
      - server
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - skillswap-network
    stdin_open: true
    tty: true

networks:
  skillswap-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
